scalar Datetime
scalar Upload
directive @isAuthenticated on OBJECT | FIELD_DEFINITION

enum TrackHandle {
  se
  ai
  pm
  ixd
  ac
  pmc
}

type CoreTeamMember {
  name: String!
  email: String!
  calendly: String!
}

type Track {
  handle: String!
  name: String!
  coreTeam: [CoreTeamMember!]
  challengeLink: [String]
  qaLink: String
}

type Document {
  bucket: String
  name: String
  url: String
}

type Form {
  location: String
  streetNumber: String
  addressSuffix: String
  postcode: String
  city: String
  country: String
  accountHolder: String
  bankName: String
  iban: String
  bic: String
  shirtSize: String
  shirtStyle: String
  foodIntolerances: String
}

type Applicant @isAuthenticated {
  id: String!
  name: String!
  batch: Int!
  track: Track!
  email: String!
  cv: Document!
  consent: String!
  scholarship: String!
  coverLetter: Document
  source: String
  gender: String
  acceptanceFormData: Form
  project: String
  strengths: String
  status: String!
  program: Program!
}

type ApplicantList @isAuthenticated {
  list: [Applicant!]
}

type User @isAuthenticated {
  uid: String!
  name: String!
  email: String
  photo: String!
}

type UserList @isAuthenticated {
  list: [User!]
}

type Program @isAuthenticated {
  id: String!
  short: String!
  title: String!
  logo: String!
}

type ProgramList @isAuthenticated {
  list: [Program!]
}

type Batch {
  batch: Int!
  startDate: Datetime!
  endDate: Datetime!
  appStartDate: Datetime!
  appEndDate: Datetime!
  appEndDateAI: Datetime
  appEndDateIXD: Datetime
  appEndDatePM: Datetime
  appEndDateSE: Datetime
  appEndDatePMC: Datetime
  appEndDateAC: Datetime
}

type BatchList @isAuthenticated {
  list: [Batch!]
}

type Comment {
  id: String!
  createdAt: Datetime!
  updatedAt: Datetime
  body: String!
  user: User!
}

type CommentList @isAuthenticated {
  list: [Comment!]
}

type MentionData {
  applicantId: String!
  batchId: String!
  commentId: String!
}

type Mention {
  id: String!
  createdAt: Datetime!
  data: MentionData!
  mentioner: User!
  new: Boolean!
}

type MentionList @isAuthenticated {
  list: [Mention!]
}

type Exception {
  code: String
  message: String
}

type Status {
  code: String
  message: String
}

union ApplicantsQueryResult = ApplicantList | Exception
union CommentsQueryResult = CommentList | Exception
union ApplicantDetailsQueryResult = Applicant | Exception
union BatchesQueryResult = BatchList | Exception
union UserQueryResult = User | Exception
union UsersQueryResult = UserList | Exception
union UserMentionsQueryResult = MentionList | Exception
union ProgramsQueryResult = ProgramList | Exception
union ProgramDetailsQueryResult = Program | Exception

type Query {
  applicants(batch_id_list: [Int!]): ApplicantsQueryResult
  applicantComments(batch_id: Int!, applicant_id: String!): CommentsQueryResult
  applicantDetails(
    batch_id: Int!
    applicant_id: String!
  ): ApplicantDetailsQueryResult
  applicantsFromTrack(
    batch_id_list: [Int!]
    track_list: [TrackHandle!]
  ): ApplicantsQueryResult
  applicantsFromTrackAndStatus(
    batch_id_list: [Int!]
    track_list: [TrackHandle!]
    status_list: [String!]
  ): ApplicantsQueryResult
  applicantsFromStatus(
    batch_id_list: [Int!]
    status_list: [String!]
  ): ApplicantsQueryResult
  batches(batch_id_list: [Int!]): BatchesQueryResult
  user: UserQueryResult
  users: UsersQueryResult
  userMentions: UserMentionsQueryResult
  programs: ProgramsQueryResult
  programDetails(program_id: String!): ProgramDetailsQueryResult
}

union MutationResult = Status | Exception

type Mutation {
  rate(batch_id: Int!, applicant_id: String!, score: Int!): MutationResult

  sendEmail(
    email_type: String!
    applicant_id: String!
    batch_id: Int
  ): MutationResult

  saveForm(
    applicant_id: String!
    batch_id: Int
    location: String!
    streetNumber: String!
    addressSuffix: String!
    postcode: String!
    city: String!
    country: String!
    accountHolder: String!
    bankName: String!
    iban: String!
    bic: String!
    shirtSize: String!
    shirtStyle: String!
    foodIntolerances: String!
  ): MutationResult

   addApplicant(  
    name: String!
    batch: Int!
    track: String!
    email: String!
    cv: Upload
    scholarship: String!
    coverLetter: Upload
    source: String
    gender: String
    program: String!
  ): MutationResult

   editApplicant(  
    name: String!
    batch: Int!
    track: String!
    email: String!
    cv: String!
    consent: String!
    scholarship: String!
    coverLetter: String
    source: String
    gender: String
    status: String!
    program: String!
  ): MutationResult

  createComment(
    batch_id: Int!
    applicant_id: String!
    comment_body: String!
  ): MutationResult
  editComment(
    batch_id: Int!
    applicant_id: String!
    comment_body: String!
    comment_id: String!
  ): MutationResult
  deleteComment(
    batch_id: Int!
    applicant_id: String!
    comment_id: String!
  ): MutationResult
  updateStatus(
    batch_id: Int!
    applicant_id: String!
    status: String!
  ): MutationResult
  createMention(
    batch_id: Int!
    applicant_id: String!
    comment_id: String!
    mentioned_id: String!
  ): MutationResult
  readMention(mention_id: String!): MutationResult
}
